version: "3.8"

services:
  db:
    image: mysql:8.0.31
    environment:
      MYSQL_DATABASE: sample
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: 'Asia/Tokyo'
    ports:
      - "3306:3306"
    networks:
      fixed_compose_network:
    volumes:
      - data_volume:/var/lib/mysql
    logging:
      driver: fluentd
      options:
        # fluentd-address: 10.245.249.101:24224
        fluentd-address: fluentbit
        fluentd-async-connect: "true"
        tag: "db"
  front_envoy:
    build:
      context: .
      dockerfile: docker/front-envoy/Dockerfile
    ports:
      - "3000:3000"
      - "9901:9901"
    hostname: front.envoy
    networks:
      fixed_compose_network:
    logging:
      driver: fluentd
      options:
        # fluentd-address: 10.245.249.101:24224
        fluentd-address: fluentbit
        fluentd-async-connect: "true"
        tag: "front-envoy"
    depends_on:
      - fluentbit
  auth_data_envoy:
    build:
      context: .
      dockerfile: docker/auth-data-envoy/Dockerfile
    hostname: auth.data.envoy
    ports:
      - "3001:3001"
      - "9902:9902"
    networks:
      fixed_compose_network:
    logging:
      driver: fluentd
      options:
        # fluentd-address: 10.245.249.101:24224
        fluentd-address: fluentbit
        fluentd-async-connect: "true"
        tag: "auth-data-envoy"
    depends_on:
      - fluentbit
  opal_server_proxy:
    build:
      context: .
      dockerfile: docker/opal-server-proxy/Dockerfile
    hostname: opal.server.proxy
    ports:
      - "3002:3002"
      - "9903:9903"
    networks:
      fixed_compose_network:
    logging:
      driver: fluentd
      options:
        # fluentd-address: 10.245.249.101:24224
        fluentd-address: fluentbit
        fluentd-async-connect: "true"
        tag: "opal-server-proxy"
    depends_on:
      - fluentbit
  opa:
    build:
      context: .
      dockerfile: ./docker/opa/Dockerfile
    ports:
      - "4000:4000"
      - "8182:8181"
    logging:
      driver: fluentd
      options:
        # fluentd-address: 10.245.249.101:24224
        fluentd-address: fluentbit
        fluentd-async-connect: "true"
        tag: "opa"
    depends_on:
      - fluentbit
    networks:
      fixed_compose_network:
  opal_server:
    image: permitio/opal-server:latest
    environment:
      - UVICORN_NUM_WORKERS=1
      - OPAL_POLICY_REPO_URL=https://github.com/hyt-sasaki/opal_policies.git
      - OPAL_POLICY_REPO_MAIN_BRANCH=main
      - OPAL_DATA_CONFIG_SOURCES={"config":{"entries":[{"url":"http://auth.data.envoy:3001/auth/data","topics":["policy_data"],"dst_path":"/custom_info", "periodic_update_interval":3000}]}}
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
      - OPAL_POLICY_REPO_POLLING_INTERVAL=300
      - OPAL_LOG_LEVEL=INFO
    hostname: opal.server
    ports:
      - "7002:7002"
    depends_on:
      - auth_data_envoy
      - fluentbit
    networks:
      fixed_compose_network:
    logging:
      driver: fluentd
      options:
        # fluentd-address: 10.245.249.101:24224
        fluentd-address: fluentbit
        fluentd-async-connect: "true"
        tag: "opal_server"
  opal_client:
    build:
      context: .
      dockerfile: ./docker/opal-client/Dockerfile
    environment:
      - OPAL_SERVER_URL=http://opal.server:7002
      - OPAL_POLICY_STORE_URL=http://opa:8181
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
      - OPAL_INLINE_OPA_LOG_FORMAT=http
      - OPAL_OFFLINE_MODE_ENABLED=true
      - OPAL_LOG_LEVEL=INFO
    volumes:
      - opa_backup:/opal/backup:rw
    networks:
      fixed_compose_network:
    ports:
      # exposes opal client on the host machine, you can access the client at: http://localhost:7766
      - "7766:7000"
    logging:
      driver: fluentd
      options:
        # fluentd-address: 10.245.249.101:24224
        fluentd-address: fluentbit
        fluentd-async-connect: "true"
        tag: "opal_client"
    depends_on:
      - opal_server
      - fluentbit
    # this command is not necessary when deploying OPAL for real, it is simply a trick for dev environments
    # to make sure that opal-server is already up before starting the client.
    command: sh -c "exec ./wait-for.sh opal.server:7002 --timeout=20 -- ./start.sh"
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    hostname: tempo
    volumes:
      - ./docker/tempo/tempo.yaml:/etc/tempo.yaml
      - trace_volume:/tmp/tempo
    ports:
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
    networks:
      fixed_compose_network:
  otel_collector:
    build:
      context: .
      dockerfile: ./docker/otel-collector/Dockerfile
    restart: always
    hostname: otel.collector
    command: [ "--config=/etc/otel-collector-config.yaml", "" ]
    ports:
      - "4317:4317"
    networks:
      fixed_compose_network:
        ipv4_address: 10.254.249.100

  fluentbit:
    build:
      context: .
      dockerfile: ./docker/fluentbit/Dockerfile
    hostname: fluentbit
    restart: always
    ports:
      - "24224:24224"
    networks:
      fixed_compose_network:
        ipv4_address: 10.254.249.101
  prometheus:
    build:
      context: .
      dockerfile: ./docker/prometheus/Dockerfile
    hostname: prometheus
    ports:
      - "9090:9090"
    networks:
      fixed_compose_network:
        ipv4_address: 10.254.249.102
  loki:
    image: grafana/loki:latest
    expose:
      - "3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      fixed_compose_network:
  grafana:
    build:
      context: .
      dockerfile: ./docker/grafana/Dockerfile
    environment:
      - "GF_AUTH_DISABLE_LOGIN_FORM=true"
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
      - "GF_SERVER_HTTP_PORT=9100"
    ports:
      - "9100:9100"
    depends_on:
      - loki
      - tempo
    networks:
      fixed_compose_network:
volumes:
  opa_backup:
  data_volume:
  trace_volume:

networks:
  fixed_compose_network:
    ipam:
      driver: default
      config:
        - subnet: 10.254.249.0/24